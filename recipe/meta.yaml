{% set version = "8.0.0" %}
{% set filename = "apache-arrow-" + version + ".tar.gz" %}
{% set checksum = "ad9a05705117c989c116bae9ac70492fe015050e1b80fb0e38fde4b5d863aaa3" %}

package:
  name: arrow-cpp
  version: {{ version }}

source:
  fn: {{ filename }}
  url: https://archive.apache.org/dist/arrow/arrow-{{ version }}/{{ filename }}
  sha256: {{ checksum }}

build:
  number: 0
  # s390x is missing gflags, glog, utf8proc, thrift-cpp
  skip: true  # [win32 or s390x]
  run_exports:
    - {{ pin_subpackage("arrow-cpp", max_pin="x.x.x") }}
  ignore_run_exports:
    # openssl, glog and zlib are expected by the build system but not
    # used/needed in the configuration that we build.
    - glog
    - openssl
    - zlib
  missing_dso_whitelist:
    - '$RPATH/libpthread.so.*'  # [linux]
    - '$RPATH/libc.so.*'        # [linux]
    - '$RPATH/libdl.so.*'       # [linux]
    - '$RPATH/libm.so.*'        # [linux]
    - '$RPATH/ld64.so.*'        # [linux]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - autoconf  # [unix]
    # See https://github.com/aws/aws-sdk-cpp/issues/1820
    - cmake  <3.22
    - gnuconfig
    - make  # [unix]
    - ninja
    # To have the protoc compiler as a build tool.
    - protobuf
    # To have the thrift compiler as a build tool.
    - thrift-cpp
  host:
    - abseil-cpp  # [not osx]
    - aws-sdk-cpp
    - boost-cpp
    - brotli
    - bzip2
    - gflags
    - glog
    - grpc-cpp
    - lz4-c
    - numpy
    - openssl
    - orc  # [unix]
    - libprotobuf
    - rapidjson
    - re2
    - snappy
    - thrift-cpp
    - uriparser
    - utf8proc
    - zlib
    - zstd
    - python
  run:
    # gflags does have a run_exports, but for some reason conda-build doesn't
    # pick it up.
    - {{ pin_compatible('gflags', max_pin='x.x') }}
    # brotli doesn't have run_exports defined.
    - brotli  # [osx]
    # Set this to some reasonable lower limit.
    - {{ pin_compatible('numpy', lower_bound='1.16') }}
    - utf8proc

test:
  requires:
    - conda-build
  commands:
    # headers
    - test -f $PREFIX/include/arrow/api.h              # [unix]
    - test -f $PREFIX/include/arrow/flight/types.h     # [unix]
    - test -f $PREFIX/include/plasma/client.h          # [unix]
    # - test -f $PREFIX/include/gandiva/engine.h         # [unix]
    - test -f $PREFIX/include/parquet/api/reader.h     # [unix]
    - if not exist %LIBRARY_INC%\\arrow\\api.h exit 1            # [win]
    # - if not exist %LIBRARY_INC%\\gandiva\\engine.h exit 1       # [win]
    - if not exist %LIBRARY_INC%\\parquet\\api\\reader.h exit 1  # [win]

    # shared
    - test -f $PREFIX/lib/libarrow${SHLIB_EXT}          # [unix]
    - test -f $PREFIX/lib/libarrow_dataset${SHLIB_EXT}  # [unix]
    - test -f $PREFIX/lib/libarrow_flight${SHLIB_EXT}   # [unix]
    - test -f $PREFIX/lib/libarrow_python${SHLIB_EXT}   # [unux]
    - test -f $PREFIX/lib/libparquet${SHLIB_EXT}        # [unix]
    # - test -f $PREFIX/lib/libgandiva${SHLIB_EXT}        # [unix]
    - test -f $PREFIX/lib/libplasma${SHLIB_EXT}         # [unix]
    - if not exist %PREFIX%\\Library\\bin\\arrow.dll exit 1          # [win]
    - if not exist %PREFIX%\\Library\\bin\\arrow_dataset.dll exir 1  # [win]
    - if not exist %PREFIX%\\Library\\bin\\arrow_flight.dll exit 1   # [win]
    - if not exist %PREFIX%\\Library\\bin\\arrow_python.dll exit 1   # [win]
    - if not exist %PREFIX%\\Library\\bin\\parquet.dll exit 1        # [win]
    # - if not exist %PREFIX%\\Library\\bin\\gandiva.dll exit 1        # [win]
    # - if not exist %PREFIX%\\Library\\bin\\plasma.dll  exit 1        # [win]
    # absence of static libraries
    - test ! -f $PREFIX/lib/libarrow.a         # [unix]
    - test ! -f $PREFIX/lib/libarrow_flight.a  # [unix]
    - test ! -f $PREFIX/lib/libarrow_python.a  # [unix]
    - test ! -f $PREFIX/lib/libplasma.a        # [unix]
    - test ! -f $PREFIX/lib/libparquet.a       # [unix]
    # - test ! -f $PREFIX/lib/libgandiva.a       # [unix]
    - if exist %PREFIX%\\Library\\lib\\arrow_static.lib exit 1         # [win]
    - if exist %PREFIX%\\Library\\lib\\arrow_flight_static.lib exit 1  # [win]
    - if exist %PREFIX%\\Library\\lib\\arrow_python_static.lib exit 1  # [win]
    - if exist %PREFIX%\\Library\\lib\\parquet_static.lib exit 1       # [win]
    # - if exist %PREFIX%\\Library\\lib\\gandiva_static.lib exit 1       # [win]

    # conda tools
    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]
    - conda inspect objects -p $PREFIX $PKG_NAME   # [osx]

about:
  home: https://github.com/apache/arrow
  license: Apache-2.0
  license_file: LICENSE.txt
  license_family: Apache
  summary: 'C++ libraries for Apache Arrow'
  dev_url: https://github.com/apache/arrow
  doc_url: https://arrow.apache.org

extra:
  recipe-maintainers:
    - wesm
    - xhochy
    - leifwalsh
    - jreback
    - cpcloud
    - pcmoritz
    - robertnishihara
    - siddharthteotia
    - kou
    - kszucs
    - pitrou
